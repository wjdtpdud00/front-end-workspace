.box-container {
    height: 50vh;
    border: 1px solid black;
}

#box-container1 {
    display: flex;
    justify-content: center;
    align-items: center;
}

.box {
    width: 200px;
    height: 200px;
    border: 2px solid black;
    background-color: rgba(174, 238, 217, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    /* transition : 변환속성 + 애니메이션 시간 */
    transition: 5s cubic-bezier(0.71, -0.95, 0.17, 3.24);
}

.box:hover {
    background-color: rgba(241, 241, 115, 0.8);
    /* trnasform: 변형함수(); */
    /* scale : 지정한 크기만큼 확대/축소하는 함수 */
    transform: scale(2);
    /* rotate : 지정한 각도만큼 회전시키는 함수 */
    transform: rotate(30deg);
    transform: skew(30deg);
    /* skew :  지정한 각도만큼 비틀어 왜곡하는 함수 */
    transform: skewY(-30deg);
    /* translate : X축, Y축, Z축 방향으로 이동시키는 함수 */
    transform: translateX(100px);
    transform: translate(100px, 200px);
    transform: scale(1.5) rotate(15deg);
    /* transform-origin:  : 변형의 기준점을 변경하는 속성; */
    transform-origin: left top;
    transform-origin: right bottom;
}

#box-container2 {
    width: 1200px;
    height: 600px;
}

.animation-box {
    box-sizing: border-box;
    width: 200px;
    height: 200px;
    border: 2px solid black;
    background: indigo;
    color: white;
    font-weight: bold;
    display: flex;
    justify-content: center;
    /* animation :(순서) name duration iteration-count timing-fuction delay direction;
    - name :  설정된 keyframe 지정
    - duration :  실행 시간 지정
    - iteration-count : 반복 횟수 지정
    - timing-fuction :  속도 형태 지정
    - delay: 대기 시간 지정
    - direction :  진행 상태 지정
    */

    animation: boxAni 5s linear;
    /* 2s는 시간 */
    animation: boxAni 5s linear 3;
    /* 끝에 3은 반복 횟수 */
    animation: boxAni 5s linear infinite;
    animation: boxAni 5s linear infinite alternate;
    /* alternate 진행형태를 나타냄 */
    animation: boxAni 5s linear infinite reverse;
    /* /반대로/ */
    animation: boxAni 5s linear infinite alternate-reverse;
    /* 거꾸로 가는데 왔다갔다 하겠다 */
    animation: boxAni 5s linear forwards;
    /* fowards 마지막 지점에서 끝난다 */
    animation: boxAni 5s linear forwards;
}

.animation-box:hover {
    animation-play-state: paused;
    /* 마우스를 올렸을때 멈춰버리겠다 */
    background-color: yellow;
}

/* 
@keyframs 애니메이션이름{
from{시작 프레임 설정}
to{끝 프레임 설정}
% {단위로 지정 가능}
}
*/
@keyframes boxAni {

    0% {
        transform: translate(0, 0);
    }

    50% {
        transform: translate(1000px, 0);
    }

    100% {
        transform: translate(1000px, 400px);
    }

    /* 대각선으로 움직여짐 */
}

/* 3D */
#box-container3 {
    width: 1200px;
    height: 600px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#box-container3:hover .card {
    transform: rotateY(180deg);
}

.card {
    width: 200px;
    height: 200px;
    transform: rotateY(45deg);
    transform: perspective(400px) rotateY(45deg);
    transform: rotateY(0deg);
    transition: 3s;
    position: relative;
    transform-style: preserve-3d;
}

.card-item {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;

}

.card-item-front {
    background-image: url('../../resources/blueberries.jpg');
    background-size: cover;
    background-position: center;
    z-index: 1;
    backface-visibility: hidden;
    /* 기본값이 backface-visibility */
    /* backface-visibility: 요소가 회전하여 뒷면이 보일경우 표시여부를 지정하는 속성 */
}

.card-item-back {
    background-color: cadetblue;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: 2rem;
    color: white;
    transform: rotateY(-180deg);

}